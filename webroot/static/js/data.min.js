window.module=window.module||{},window.module.data=window.module.data||{init(){function t(t){this.getNodes=async()=>fetch(`/minio/ui/api/v1/buckets/${this.name}/objects`).then(t=>{if(t.ok)return t.json();throw t}).then(t=>{let i=[],o=[];return t.objects.forEach(t=>{t.bucket=this,t.parent=this,t.etag?o.push(new n(t)):i.push(new e(t))}),{folders:window.common.util.setArrayFunctions(i,e),files:window.common.util.setArrayFunctions(o,n)}}),this.upload=async t=>{let e=[];if(t.length>0){let n=[];for(let i=0;i<t.length;i++){let o=t[i],s=new FormData;s.append(o.size,o),n.push(fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects/upload?prefix=${btoa(o.name)}`,{method:"POST",body:s})),e.push(null)}for(let a=0,u=1;a<t.length;a++,u++)n[a].then(t=>{e[a]=t})}return e},this.print=()=>{console.log(this)}}function e(t){this.getNodes=async()=>fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects?prefix=${btoa(this.name)}`).then(t=>{if(t.ok)return t.json();throw t}).then(t=>{let i=[],o=[];return t.objects.forEach(t=>{t.bucket=this.bucket,t.parent=this,t.etag?o.push(new n(t)):i.push(new e(t))}),{folders:window.common.util.setArrayFunctions(i,e),files:window.common.util.setArrayFunctions(o,n)}}),this.getParent=async()=>this.parent,this.createFolder=async t=>new e({last_modified:"",name:`${this.name}${t}/`,bucket:this.bucket}),this.upload=async t=>{let e=[];if(t.length>0){let n=[];for(let i=0;i<t.length;i++){let o=t[i],s=`${this.name}${o.name}`,a=new FormData;a.append(o.size,o),n.push(fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects/upload?prefix=${btoa(s)}`,{method:"POST",body:a})),e.push(null)}for(let u=0,h=1;u<t.length;u++,h++)n[u].then(t=>{e[u]=t})}return e},this.delete=async()=>fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects?prefix=${btoa(this.name)}&recursive=true`,{method:"DELETE"}).then(t=>{if(t.ok)return!0;throw t}),this.print=()=>{console.log(this)}}function n(t){this.getParent=async()=>this.parent,this.download=async()=>fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects/download?prefix=${file.name}`).then(t=>{if(t.ok)return t.blob();throw t}),this.delete=async()=>fetch(`/minio/ui/api/v1/buckets/${this.bucket.name}/objects?prefix=${btoa(this.name)}`,{method:"DELETE"}).then(t=>{if(t.ok)return!0;throw t}),this.print=()=>{console.log(this)}}window.module.data.isAutoLogin=!0,console.log("(window.module.data) initialize"),window.module.data.login=()=>{fetch("/minio/ui/api/v1/login").then(t=>{if(t.ok)return t.json();throw t}).then(e=>{fetch(e.redirectRules[0].redirect).then(t=>{if(t.ok)return t.json();throw t}).then(e=>{e.state=decodeURIComponent(e.state),fetch("/minio/ui/api/v1/login/oauth2/auth",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then(e=>{if(e.ok)fetch("/minio/ui/cookie_to_data").then(t=>{if(t.ok)return t.json();throw t}).then(e=>{window.module.data.accessToken=e.token,window.module.data.getBuckets=async()=>fetch("/minio/ui/api/v1/buckets").then(t=>{if(t.ok)return t.json();throw t}).then(e=>{let n=[];return e.buckets.forEach(e=>{let i=e.name.split(".");e.owner=i[0],e.displayName=i[1],e.personal=e.owner==window.common.auth.username,n.push(new t(e))}),window.common.util.setArrayFunctions(n,t)})});else throw e})})})},console.log("(window.module.data) ready")}};